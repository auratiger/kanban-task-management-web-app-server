services:
   board-db:
      image: postgres:latest
      restart: on-failure
      hostname: board-db
      container_name: board-db
      ports:
         - '5432:5432'
      env_file:
         - .env.prod
      environment:
         - POSTGRES_USER=${POSTGRES_USER}
         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
         - POSTGRES_DB=${POSTGRES_DB}
      healthcheck:
         test: ['CMD', 'pg_isready', '-q', '-d', 'database', '-U', 'postgres']
         interval: 2s
         timeout: 10s
         retries: 10
      volumes:
         - ./docker-data/db/board:/var/lib/postgresql/data
         - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh

   pgadmin:
      container_name: pgadmin
      image: dpage/pgadmin4:latest
      env_file:
         - .env.prod
      ports:
         - '5050:80'
      restart: always
      depends_on:
         board-db:
            condition: service_healthy

   prisma-migrate:
      build:
         context: ./prisma
         dockerfile: Dockerfile
      container_name: prisma-migrate
      env_file:
         - .env.prod
      depends_on:
         board-db:
            condition: service_healthy

   # board-service:
   #    build:
   #       dockerfile: Dockerfile.prod
   #       context: .
   #    container_name: board-service
   #    ports:
   #       - '8001:8001'
   #    # restart: on-failure
   #    depends_on:
   #       board-db:
   #          condition: service_healthy
   #    env_file:
   #       - .env.prod
